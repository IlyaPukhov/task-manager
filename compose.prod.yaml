name: 'task-manager_prod'

networks:
  task-manager:
    name: 'task-manager'
    driver: bridge

services:
  # microservices
  api-gateway:
    container_name: api-gateway
    image: ilyapukhov/api-gateway
    restart: unless-stopped
    ports:
      - '8080:8080'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - user-service
      - task-service
      - productivity-service
      - mail-service
      - auth-service
  auth-service:
    container_name: auth-service
    image: ilyapukhov/auth-service
    restart: unless-stopped
    ports:
      - '8084:8084'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8084/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      user-service:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      kafka:
        condition: service_healthy
  config-server:
    container_name: config-server
    image: ilyapukhov/config-server
    restart: unless-stopped
    ports:
      - '8888:8888'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8888/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
  eureka-server:
    container_name: eureka-server
    image: ilyapukhov/eureka-server
    restart: unless-stopped
    ports:
      - '8761:8761'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8761/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
  mail-service:
    container_name: mail-service
    image: ilyapukhov/mail-service
    restart: unless-stopped
    ports:
      - '8090:8090'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8090/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
  productivity-service:
    container_name: productivity-service
    image: ilyapukhov/productivity-service
    restart: unless-stopped
    ports:
      - '8083:8083'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8083/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      db-productivity:
        condition: service_healthy
  task-service:
    container_name: task-service
    image: ilyapukhov/task-service
    restart: unless-stopped
    ports:
      - '8082:8082'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8082/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      db-task:
        condition: service_healthy
  user-service:
    container_name: user-service
    image: ilyapukhov/user-service
    restart: unless-stopped
    ports:
      - '8081:8081'
    env_file:
      - ./.env.prod
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      task-service:
        condition: service_healthy
      db-user:
        condition: service_healthy

  # infrastructure
  db-user-service:
    extends:
      service: db-user
      file: infrastructure.yaml
    networks:
      - task-manager
    environment:
      POSTGRES_DB: ${USER_SERVICE_DB}
      POSTGRES_USER: ${USER_SERVICE_USER}
      POSTGRES_PASSWORD: ${USER_SERVICE_PASSWORD}
    env_file:
      - ./.env.prod
  db-task-service:
    extends:
      service: db-task
      file: infrastructure.yaml
    networks:
      - task-manager
    environment:
      POSTGRES_DB: ${TASK_SERVICE_DB}
      POSTGRES_USER: ${TASK_SERVICE_USER}
      POSTGRES_PASSWORD: ${TASK_SERVICE_PASSWORD}
    env_file:
      - ./.env.prod
  db-productivity-service:
    extends:
      service: db-productivity
      file: infrastructure.yaml
    networks:
      - task-manager
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PRODUCTIVITY_SERVICE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${PRODUCTIVITY_SERVICE_PASSWORD}
    env_file:
      - ./.env.prod
  kafka:
    extends:
      service: kafka
      file: infrastructure.yaml
    networks:
      - task-manager
  keycloak:
    extends:
      service: keycloak
      file: infrastructure.yaml
    networks:
      - task-manager
    env_file:
      - ./.env.prod
  victoria-metrics:
    extends:
      service: victoria-metrics
      file: infrastructure.yaml
    networks:
      - task-manager
  grafana:
    extends:
      service: grafana
      file: infrastructure.yaml
    networks:
      - task-manager
    ports:
      - '3000:3000'
    env_file:
      - ./.env.prod
  grafana-loki:
    extends:
      service: grafana-loki
      file: infrastructure.yaml
    networks:
      - task-manager
  grafana-tempo:
    extends:
      service: grafana-tempo
      file: infrastructure.yaml
    networks:
      - task-manager