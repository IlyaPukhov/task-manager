server:
  port: 8084
spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOST:localhost:18080}/realms/task-manager
keycloak:
  server-url: http://${KEYCLOAK_HOST:localhost:18080}
  realm: task-manager
  client-id: ${KEYCLOAK_CLIENT_ID}
  client-secret: ${KEYCLOAK_CLIENT_SECRET}
logging:
  level:
    root: info
    org.springframework.security: trace
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 1
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST:localhost:8761}/eureka/
    registryFetchIntervalSeconds: 1
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:localhost:9411}/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true